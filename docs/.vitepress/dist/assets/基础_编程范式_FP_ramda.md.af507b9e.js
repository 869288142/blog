import{_ as e,c as t,o as p,a as s}from"./app.a3c81315.js";const _='{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"\u57FA\u7840/\u7F16\u7A0B\u8303\u5F0F/FP/ramda.md"}',n={},a=s("<p>\u8BFB\u53D6\u6570\u7EC4\u5143\u7D20</p><p>\u6570\u7EC4\u4E2D\u4E0E prop \u7C7B\u4F3C\u7684\u662F nth\uFF1B\u4E0E pick \u7C7B\u4F3C\u7684\u662F slice\uFF0C\u8DDF has \u7C7B\u4F3C\u7684\u662F contains</p><p>const numbers = [10, 20, 30, 40, 50, 60]</p><p>nth(3, numbers) // =&gt; 40 (0-based indexing)</p><p>nth(-2, numbers) // =&gt; 50 (negative numbers start from the right)</p><p>slice(2, 5, numbers) // =&gt; [30, 40, 50] (see below)</p><p>contains(20, numbers) // =&gt; true</p><p>const numbers = [10, 20, 30, 40, 50, 60]</p><p>head(numbers) // =&gt; 10 tail(numbers) // =&gt; [20, 30, 40, 50, 60]</p><p>last(numbers) // =&gt; 60 init(numbers) // =&gt; [10, 20, 30, 40, 50]</p><p>take(3, numbers) // =&gt; [10, 20, 30] takeLast(3, numbers) // =&gt; [40, 50, 60]</p><p>\u589E\u3001\u5220\u3001\u6539\u6570\u7EC4\u5143\u7D20</p><p>const numbers = [10, 20, 30, 40, 50, 60]</p><p>insert(3, 35, numbers) // =&gt; [10, 20, 30, 35, 40, 50, 60]</p><p>append(70, numbers) // =&gt; [10, 20, 30, 40, 50, 60, 70]</p><p>prepend(0, numbers) // =&gt; [0, 10, 20, 30, 40, 50, 60]</p><p>update(1, 15, numbers) // =&gt; [10, 15, 30, 40, 50, 60]</p><p>const numbers = [10, 20, 30, 40, 50, 60]</p><p>remove(2, 3, numbers) // =&gt; [10, 20, 60]</p><p>without([30, 40, 50], numbers) // =&gt; [10, 20, 60]</p><p>drop(3, numbers) // =&gt; [40, 50, 60]</p><p>dropLast(3, numbers) // =&gt; [10, 20, 30]</p><p>\u53D8\u6362 const numbers = [10, 20, 30, 40, 50, 60]</p><p>adjust(multiply(10), 2, numbers)</p><p>\u8BFB\u53D6\u5BF9\u8C61\u5C5E\u6027</p><p>prop \u8BFB\u53D6\u5355\u4E2A\u5C5E\u6027</p><p>const wasBornInCountry = person =&gt; person.birthCountry === OUR_COUNTRY const wasNaturalized = person =&gt; Boolean(person.naturalizationDate) const isOver18 = person =&gt; person.age &gt;= 18</p><p>point free const wasBornInCountry = compose(equals(OUR_COUNTRY), prop(&#39;birthCountry&#39;)) const wasNaturalized = compose(Boolean, prop(&#39;naturalizationDate&#39;)) const isOver18 = compose(gte(__, 18), prop(&#39;age&#39;))</p><p>pick \u8BFB\u53D6\u591A\u4E2A\u5C5E\u6027</p><p>has \u9A8C\u8BC1\u5C5E\u6027</p><p>path\u8BFB\u53D6\u5D4C\u5957\u5C5E\u6027</p><p>\u5BF9\u5C5E\u6027\u589E\u3001\u5220\u3001\u6539\u3001\u67E5</p><p>assoc / assocPath</p><p>const updatedPerson = assoc(&#39;name&#39;, &#39;New name&#39;, person)\u3002</p><p>assocPath\uFF1Aconst updatedPerson = assocPath([&#39;address&#39;, &#39;zipcode&#39;], &#39;97504&#39;, person)</p><p>dissoc / dissocPath / omit</p><p>const updatedPerson = dissoc(&#39;age&#39;, person)\u3002</p><p>\u5C5E\u6027\u8F6C\u6362</p><p>const celebrateBirthday = evolve({ age: inc })</p><p>\u5408\u5E76\u5BF9\u8C61</p><p>\u51FD\u6570\u7EC4\u5408</p><p>complement //not</p><p>Both/Either</p><p>const isCitizen = person =&gt; wasBornInCountry(person) || wasNaturalized(person)</p><p>const isEligibleToVote = person =&gt; isOver18(person) &amp;&amp; isCitizen(person)</p><p>const isCitizen = either(wasBornInCountry, wasNaturalized) const isEligibleToVote = both(isOver18, isCitizen)</p><p>Pipelines(\u7BA1\u9053)</p><p>\u90E8\u5206\u5E94\u7528\u51FD\u6570 \u504F\u51FD\u6570 partial \u548C partialRight \u53C2\u6570\u5FC5\u987B\u4E3A\u6570\u7EC4</p><p>\u987A\u5E8F\u9519\u8BEF\u7684\u53C2\u6570</p><p>\u7B2C\u4E00\u4E2A\u9009\u62E9\u662F flip\u3002flip \u63A5\u53D7\u4E00\u4E2A\u591A\u5143\u51FD\u6570\uFF08\u5143\u6570 &gt;= 2\uFF09\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5143\u6570\u76F8\u540C\u7684\u65B0\u51FD\u6570\uFF0C\u4F46\u524D 2 \u4E2A\u53C2\u6570\u7684\u987A\u5E8F\u8C03\u6362\u4E86\u3002\u5B83\u4E3B\u8981\u7528\u4E8E\u4E8C\u5143\u51FD\u6570\uFF0C\u4F46\u4E5F\u53EF\u4EE5\u7528\u4E8E\u4E00\u822C\u51FD\u6570\u3002</p><p>placeholder (\u5360\u4F4D\u7B26)</p><p>const threeArgs = curry((a, b, c) =&gt; { /* ... */ })</p><p>const middleArgumentLater = threeArgs(&#39;value for a&#39;, __, &#39;value for c&#39;)</p><p>\u58F0\u660E\u5F0F\u7F16\u7A0B</p><p>Ramda \u63D0\u4F9B\u4E86 add\u3001subtract\u3001multiply \u548C divide \u51FD\u6570\u6765\u66FF\u4EE3\u6807\u51C6\u7684\u7B97\u672F\u8FD0\u7B97\u7B26\u3002\u6240\u4EE5\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 Ramda \u7684 multiply \u6765\u4EE3\u66FF\u6211\u4EEC\u81EA\u5DF1\u5B9E\u73B0\u7684\u4E58\u6CD5\uFF0C\u53EF\u4EE5\u5229\u7528 Ramda \u7684\u67EF\u91CC\u5316 add \u51FD\u6570\u7684\u4F18\u52BF\u6765\u53D6\u4EE3\u6211\u4EEC\u7684 addOne\uFF0C\u4E5F\u53EF\u4EE5\u5229\u7528 multiply \u6765\u7F16\u5199 square\uFF1A</p><p>const square = x =&gt; multiply(x, x)</p><p>const operate = pipe( multiply, add(1), square )</p><p>Comparison (\u6BD4\u8F83)</p><p>\u4F7F\u7528 equals \u4EE3\u66FF ===\uFF0C\u4F7F\u7528 gte \u66FF\u4EE3 &gt;=\u3002</p><p>null \u6216 undefined\u3002Ramda \u4E3A\u8FD9\u4E24\u79CD\u60C5\u51B5\u63D0\u4F9B\u4E86\u65B9\u4FBF\u7684\u5224\u65AD\u51FD\u6570\uFF1AisEmpty \u548C isNil</p><p>\u903B\u8F91</p><p>and\u3001or \u548C not \u7528\u4E8E\u5904\u7406\u6570\u503C</p><p>Conditionals (\u6761\u4EF6)</p><p>ifElse</p><p>const forever21 = age =&gt; age &gt;= 21 ? 21 : age + 1</p><p>const forever21 = age =&gt; ifElse(gte(__, 21), () =&gt; 21, inc)(age)</p><p>constants (\u5E38\u91CF)</p><p>const forever21 = age =&gt; ifElse(gte(__, 21), always(21), inc)(age)</p><p>identity (\u6052\u7B49)</p><p>const alwaysDrivingAge = age =&gt; ifElse(lt(__, 16), always(16), a =&gt; a)(age)</p><p>const alwaysDrivingAge = age =&gt; ifElse(lt(__, 16), always(16), identity)(age)</p><p>when \u548C unless</p><p>\u5728 ifElse \u4EE3\u7801\u4E2D\uFF0C\u5176\u4E2D\u4E00\u4E2A\u6761\u4EF6\u5206\u652F\u4E3A identity \u4E5F\u5F88\u5E38\u89C1\u3002\u6240\u4EE5 Ramda \u4E5F\u63D0\u4F9B\u4E86\u4FBF\u6377\u7684\u65B9\u6CD5\u3002</p><p>const alwaysDrivingAge = age =&gt; when(lt(__, 16), always(16))(age)</p><p>\u5982\u679C\u7B2C\u4E00\u4E2A\u6761\u4EF6\u5206\u652F\u662F identity\uFF0C\u53EF\u4EE5\u7528 unless\u3002\u501F\u52A9 gte(__, 16) \u6765\u7FFB\u8F6C\u4E00\u4E0B\u6211\u4EEC\u7684\u6761\u4EF6\uFF0C\u4FBF\u53EF\u4EE5\u4F7F\u7528 unless \u4E86</p><p>const alwaysDrivingAge = age =&gt; unless(gte(__, 16), always(16))(age)</p><p>cond switch \u8BED\u53E5\u6216\u94FE\u5F0F\u7684 if...then...else \u8BED\u53E5\u3002</p><p>const water = temperature =&gt; cond([ [equals(0), always(&#39;water freezes at 0\xB0C&#39;)], [equals(100), always(&#39;water boils at 100\xB0C&#39;)], [T, temp =&gt; <code>nothing special happens at ${temp}\xB0C</code>] ])(tem</p><p>\u900F\u955C\uFF08lens\uFF09\u4EE5\u58F0\u660E\u5F0F\u548C\u4E0D\u53D8\u5F0F\u6765\u8BFB\u53D6\u3001\u66F4\u65B0\u548C\u8F6C\u6362\u5BF9\u8C61\u7684\u5C5E\u6027\u548C\u6570\u7EC4\u7684\u5143\u7D20\u3002</p><p>ensProp\uFF1A\u521B\u5EFA\u5173\u6CE8\u5BF9\u8C61\u67D0\u4E00\u5C5E\u6027\u7684\u900F\u955C\u3002 lensPath: \u521B\u5EFA\u5173\u6CE8\u5BF9\u8C61\u67D0\u4E00\u5D4C\u5957\u5C5E\u6027\u7684\u900F\u955C\u3002 lensIndex: \u521B\u5EFA\u5173\u6CE8\u6570\u7EC4\u67D0\u4E00\u7D22\u5F15\u7684\u900F\u955C\u3002</p><p>const nameLens = lensProp(&#39;name&#39;) const twitterLens = lensPath([&#39;socialMedia&#39;, &#39;twitter&#39;])</p><p>\u8F85\u52A9\u51FD\u6570 view\uFF1A\u8BFB\u53D6\u900F\u955C\u7684\u503C\u3002 set\uFF1A\u66F4\u65B0\u900F\u955C\u7684\u503C\u3002 over\uFF1A\u5C06\u53D8\u6362\u51FD\u6570\u4F5C\u7528\u4E8E\u900F\u955C\u3002</p><p>Transduce \u76F8\u8F83\u4E8E Reduce \u7684\u6539\u8FDB\uFF0C\u7528\u4E00\u53E5\u8BDD\u6982\u62EC\uFF1A\u5728\u4F7F\u7528 Reduce \u5BF9\u6BCF\u4E2A\u5143\u7D20\u5F52\u7EA6\u4E4B\u524D\uFF0C\u5148\u5BF9\u53D6\u51FA\u7684\u6BCF\u4E2A\u5143\u7D20\u8FDB\u884C\u8F6C\u6362\u3002</p><p>const transformer = reducingFunction =&gt; ({ // 1. \u4F5C\u4E3A reduce \u5F00\u59CB\u7684\u521D\u59CB\u503C init: () =&gt; 1,</p><p>// 2. \u6BCF\u6B21\u8F93\u5165\u4E00\u4E2A\u5143\u7D20\uFF0C\u5E76\u5C06\u672C\u6B21\u8BA1\u7B97\u7ED3\u679C // \u4F20\u7ED9\u4E0B\u6B21\u8FED\u4EE3\u7684 reducing function step: reducingFunction,</p><p>// 3. \u5C06\u6700\u540E\u4E00\u6B21\u7684\u8BA1\u7B97\u7ED3\u679C\u4F5C\u4E3A\u8F93\u51FA result: result =&gt; result, });</p><p>const reduce = (xf, init, input) =&gt; { let result = input.reduce(xf.step, init); return xf.result(result); };</p><p>\u5305\u88C5</p><p>const reduce = (xf, init, input) =&gt; { if(typeof xf === &#39;function&#39;){ // \u786E\u4FDD reduce \u4E2D\u542B\u6709 transformer xf = wrap(xf); } const result = input.reduce(xf.step, init); return xf.result(result); }</p><p>const wrap = xf =&gt; ({ // 1. \u6211\u4EEC\u4F1A\u663E\u5F0F\u7684\u4F20\u5165\u4E00\u4E2A reduce \u7684\u521D\u59CB\u503C\uFF0C // \u6240\u4EE5\u8FD9\u91CC\u4E0D\u518D\u9700\u8981\u5185\u90E8\u7684 init \u51FD\u6570 init: () =&gt; { throw new Error(&#39;init not supported&#39;); },</p><p>// 2. \u6BCF\u6B21\u8F93\u5165\u4E00\u4E2A\u5143\u7D20\uFF0C\u5E76\u5C06\u672C\u6B21\u8BA1\u7B97\u7ED3\u679C // \u4F20\u7ED9\u4E0B\u6B21\u8FED\u4EE3\u7684 reducing function step: reducingFunction,</p><p>// 3. \u5C06\u6700\u540E\u4E00\u6B21\u7684\u8BA1\u7B97\u7ED3\u679C\u4F5C\u4E3A\u8F93\u51FA result: result =&gt; result, }</p>",92),r=[a];function o(i,u,c,l,g,d){return p(),t("div",null,r)}var f=e(n,[["render",o]]);export{_ as __pageData,f as default};

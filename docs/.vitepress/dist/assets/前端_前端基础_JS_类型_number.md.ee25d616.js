import{_ as n,c as s,o as a,a as p}from"./app.a3c81315.js";const b='{"title":"number","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7CBE\u5EA6","slug":"\u7CBE\u5EA6"},{"level":3,"title":"\u5927\u6570\u7CBE\u5EA6","slug":"\u5927\u6570\u7CBE\u5EA6"},{"level":3,"title":"\u5C0F\u6570\u7CBE\u5EA6","slug":"\u5C0F\u6570\u7CBE\u5EA6"},{"level":2,"title":"IEEE 754 \u7ECF\u5178\u95EE\u9898","slug":"ieee-754-\u7ECF\u5178\u95EE\u9898"},{"level":3,"title":"\u539F\u56E0","slug":"\u539F\u56E0"},{"level":3,"title":"\u9A8C\u8BC1\u65B9\u6848","slug":"\u9A8C\u8BC1\u65B9\u6848"},{"level":2,"title":"\u7279\u6B8A\u503C","slug":"\u7279\u6B8A\u503C"},{"level":3,"title":"NaN","slug":"nan"},{"level":3,"title":"\u65E0\u7A77\u6570","slug":"\u65E0\u7A77\u6570"},{"level":3,"title":"\u96F6\u503C(0\u3001-0)","slug":"\u96F6\u503C-0\u3001-0"},{"level":3,"title":"\u7279\u6B8A\u7B49\u5F0F\u7684\u7EDF\u4E00\u5316\u5904\u7406 Object.is()","slug":"\u7279\u6B8A\u7B49\u5F0F\u7684\u7EDF\u4E00\u5316\u5904\u7406-object-is"}],"relativePath":"\u524D\u7AEF/\u524D\u7AEF\u57FA\u7840/JS/\u7C7B\u578B/number.md"}',t={},o=p(`<h1 id="number" tabindex="-1">number <a class="header-anchor" href="#number" aria-hidden="true">#</a></h1><p>js\u6570\u5B57<strong>\u6CA1\u6709\u660E\u786E\u533A\u5206\u6D6E\u70B9\u6570\u548C\u6574\u6570\u7C7B\u578B</strong>\uFF0C\u7EDF\u4E00\u7528number\u7C7B\u578B\u8868\u793A\u3002</p><h2 id="\u7CBE\u5EA6" tabindex="-1">\u7CBE\u5EA6 <a class="header-anchor" href="#\u7CBE\u5EA6" aria-hidden="true">#</a></h2><p><a href="https://zhuanlan.zhihu.com/p/66949640" target="_blank" rel="noopener noreferrer">\u8D44\u6599</a></p><h3 id="\u5927\u6570\u7CBE\u5EA6" tabindex="-1">\u5927\u6570\u7CBE\u5EA6 <a class="header-anchor" href="#\u5927\u6570\u7CBE\u5EA6" aria-hidden="true">#</a></h3><ul><li><p>\u5B89\u5168\u6574\u6570 <code>Number.MAX_SAFE_INTEGER</code></p></li><li><p>\u89E3\u51B3\u601D\u8DEF <strong>\u8F6C\u6362\u4E3A\u5B57\u7B26\u4E32\u6A21\u62DF\u76F8\u52A0</strong></p></li><li><p>\u89E3\u51B3\u65B9\u6848 <code>bigint</code></p></li></ul><h3 id="\u5C0F\u6570\u7CBE\u5EA6" tabindex="-1">\u5C0F\u6570\u7CBE\u5EA6 <a class="header-anchor" href="#\u5C0F\u6570\u7CBE\u5EA6" aria-hidden="true">#</a></h3><ul><li>\u89E3\u51B3\u65B9\u6848 \u8F6C\u6362\u6210\u6574\u6570\u518D\u8FD8\u539F\u83B7\u53D6</li></ul><h2 id="ieee-754-\u7ECF\u5178\u95EE\u9898" tabindex="-1">IEEE 754 \u7ECF\u5178\u95EE\u9898 <a class="header-anchor" href="#ieee-754-\u7ECF\u5178\u95EE\u9898" aria-hidden="true">#</a></h2><h3 id="\u539F\u56E0" tabindex="-1">\u539F\u56E0 <a class="header-anchor" href="#\u539F\u56E0" aria-hidden="true">#</a></h3><p>number \u57FA\u4E8EIEEE 754\u6807\u51C6\u5B9E\u73B0 js\u91C7\u7528\u7684\u662F\u53CC\u7CBE\u5EA6(64\u4F4D\u4E8C\u8FDB\u5236)</p><p>\u6211\u4EEC\u770B\u4E00\u4E2A\u57FA\u4E8EIEEE 754\u6807\u51C6\u5B9E\u73B0\u90FD\u6709\u4F1A\u6709\u7684\u7ECF\u5178\u95EE\u9898</p><div class="language-js"><pre><code><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span> <span class="token operator">===</span> <span class="token number">0.3</span> <span class="token comment">//false</span>
<span class="token comment">// \u539F\u56E0\u662F 0.1 0.2 \u4E0D\u7CBE\u786E\uFF0C\u76F8\u52A0\u4E0D\u7B49\u4E8E0.3 \u800C\u662F\u4E00\u4E2A\u7C7B\u4F3C0.30000000004 \u7684\u503C\uFF0C\u6240\u4EE5\u6761\u4EF6\u5224\u65AD\u7ED3\u679C\u4E3Afalse</span>
</code></pre></div><h3 id="\u9A8C\u8BC1\u65B9\u6848" tabindex="-1">\u9A8C\u8BC1\u65B9\u6848 <a class="header-anchor" href="#\u9A8C\u8BC1\u65B9\u6848" aria-hidden="true">#</a></h3><p>\u6211\u4EEC\u5F88\u5BB9\u6613\u4FEE\u6B63\u8FD9\u4E2A\u9519\u8BEF\uFF0C\u77E5\u9053\u662F\u56E0\u4E3A\u504F\u5DEE\u503C\u51FA\u73B0\u95EE\u9898\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A\u504F\u5DEE\u503C\uFF0C\u5728\u6B64\u504F\u5DEE\u503C\u5185\u6211\u4EEC\u8BA4\u4E3A\u4E24\u8005\u76F8\u7B49\u3002\u5BF9\u4E8Ejs\u6765\u8BF4\uFF0C2^-52\u6BD4\u8F83\u5408\u9002\u3002\u76EE\u524DES6\u4E3A\u6211\u4EEC\u63D0\u4F9B\u4E86\u8FD9\u4E2A\u504F\u5DEE\u503C</p><div class="language-js"><pre><code><span class="token comment">// Number.EPSILON ES6\u63D0\u4F9B\u7684\u6BD4\u8F83\u504F\u5DEE\u503C</span>
<span class="token comment">// polyfill</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">52</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5224\u65AD\u76F8\u7B49\u7684\u65B9\u5F0F</span>
<span class="token keyword">function</span> <span class="token function">numbersCloseEnoughToEqual</span><span class="token punctuation">(</span><span class="token parameter">n1<span class="token punctuation">,</span>n2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span> n1 <span class="token operator">-</span> n2 <span class="token punctuation">)</span> <span class="token operator">&lt;</span> Number<span class="token punctuation">.</span><span class="token constant">EPSILON</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">;</span>
<span class="token function">numbersCloseEnoughToEqual</span><span class="token punctuation">(</span> a<span class="token punctuation">,</span> b <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">numbersCloseEnoughToEqual</span><span class="token punctuation">(</span> <span class="token number">0.0000001</span><span class="token punctuation">,</span> <span class="token number">0.0000002</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h2 id="\u7279\u6B8A\u503C" tabindex="-1">\u7279\u6B8A\u503C <a class="header-anchor" href="#\u7279\u6B8A\u503C" aria-hidden="true">#</a></h2><p>\u6BD4\u8D77\u5176\u4ED6\u8BED\u8A00\uFF0Cjs\u63D0\u4F9B\u4E86\u6570\u5B57\u7684\u5F88\u591A\u7279\u6B8A\u503C\uFF0C\u6211\u4EEC\u770B\u4E00\u4E0B\u5B83\u4EEC\u51FA\u73B0\u7684\u573A\u5408\u4EE5\u53CA\u5224\u522B\u65B9\u5F0F</p><h3 id="nan" tabindex="-1">NaN <a class="header-anchor" href="#nan" aria-hidden="true">#</a></h3><h4 id="\u7528\u9014" tabindex="-1">\u7528\u9014 <a class="header-anchor" href="#\u7528\u9014" aria-hidden="true">#</a></h4><p>\u4E0D\u662F\u6570\u5B57\u7684\u6570\u5B57\uFF0C\u8868\u793A\u6570\u5B57\u8FD0\u7B97\u548C\u6570\u5B57\u89E3\u6790\u4E2D\u7684\u9519\u8BEF,\u6BD4\u5982\u6570\u5B57\u8FD0\u7B97\u4E2D\u64CD\u4F5C\u6570\u4E0D\u4E3A\u6570\u5B57\uFF0C\u6216\u8005\u503C\u65E0\u6CD5\u88AB\u89E3\u6790\u4E3A\u5341\u8FDB\u5236\u6216\u5341\u516D\u8FDB\u5236\uFF0C\u770B\u4E0B\u9762\u7684\u4F8B\u5B50</p><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token string">&quot;foo&quot;</span> <span class="token comment">//NaN</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">)</span> <span class="token comment">//NaN</span>
</code></pre></div><h4 id="\u5224\u522B\u65B9\u5F0F" tabindex="-1">\u5224\u522B\u65B9\u5F0F <a class="header-anchor" href="#\u5224\u522B\u65B9\u5F0F" aria-hidden="true">#</a></h4><p>\u5C1D\u8BD5\u4E00 == ===</p><div class="language-js"><pre><code><span class="token comment">// \u610F\u6599\u4E4B\u5916 NaN\u548C\u81EA\u8EAB\u4E0D\u76F8\u7B49</span>
<span class="token number">NaN</span> <span class="token operator">==</span> <span class="token number">NaN</span>
<span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span>
</code></pre></div><p>\u5C1D\u8BD5\u4E8C isNaN</p><div class="language-js"><pre><code><span class="token comment">// \u5168\u5C40isNaN\u51FD\u6570</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token string">&quot;foo&quot;</span>
is <span class="token function">NaN</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// true</span>

<span class="token punctuation">[</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span> <span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u7ED3\u679C \u5BF9\u4E8Eundefined\u3001{} \u3001&quot;foo&quot;\u90FD\u8FD4\u56DE\u4E86true\uFF0C\u660E\u663E\u4ED6\u4EEC\u4E0D\u662FNaN</span>
<span class="token keyword">undefined</span> <span class="token boolean">true</span>
<span class="token keyword">null</span> <span class="token boolean">false</span>
<span class="token boolean">true</span> <span class="token boolean">false</span>
<span class="token boolean">false</span> <span class="token boolean">false</span>
<span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token boolean">true</span>
<span class="token number">1</span> <span class="token boolean">false</span>
foo <span class="token boolean">true</span>

<span class="token comment">//\u6211\u4EEC\u9700\u8981\u52A0\u4E00\u5C42\u4FDD\u9669\uFF0C\u76EE\u524D\u8FD9\u4E2A\u65B9\u6848\u5DF2\u7ECF\u88ABES6\u5B9E\u73B0\u4E3ANumber.isNaN</span>

<span class="token comment">//polyfill</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span>isNaN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Number<span class="token punctuation">.</span><span class="token function-variable function">isNaN</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">typeof</span> n <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
    <span class="token comment">//\u6216\u8005</span>
    <span class="token keyword">return</span> n<span class="token operator">!==</span>n
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div><h3 id="\u65E0\u7A77\u6570" tabindex="-1">\u65E0\u7A77\u6570 <a class="header-anchor" href="#\u65E0\u7A77\u6570" aria-hidden="true">#</a></h3><h4 id="\u7528\u9014-1" tabindex="-1">\u7528\u9014 <a class="header-anchor" href="#\u7528\u9014-1" aria-hidden="true">#</a></h4><p>\u4F20\u7EDF\u7F16\u8BD1\u8BED\u8A00\u4E2D \u9664\u4EE50 \u4F1A\u629B\u51FA\u7F16\u8BD1\u9519\u8BEF\u6216\u8005\u8FD0\u884C\u65F6\u9519\u8BEF\uFF0C\u4F8B\u5982\u9664\u4EE50,\u5728js\u4E2D\uFF0C\u8FD9\u4E2A\u9519\u8BEF\u88AB\u5B9A\u4E49\u4E3A\u5E38\u91CF\uFF0C\u65E0\u7A77\u6570 Infinity(Number.POSITIVE_INFINITY),\u8FD8\u6709\u5728\u8FD0\u7B97\u4E2D\u7ED3\u679C\u6EA2\u51FA\u7684\u60C5\u51B5\u4E5F\u4F1A\u51FA\u73B0Infinity</p><h4 id="\u65E0\u7A77\u6570\u76F8\u5173\u8FD0\u7B97" tabindex="-1">\u65E0\u7A77\u6570\u76F8\u5173\u8FD0\u7B97 <a class="header-anchor" href="#\u65E0\u7A77\u6570\u76F8\u5173\u8FD0\u7B97" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// Infinity(Number.POSITIVE_INFINITY)</span>

<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// -Infinity(Number.NEGATIVE_INfiNITY)</span>

<span class="token keyword">var</span> a <span class="token operator">=</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span> <span class="token comment">// 1.7976931348623157e+308</span>
a <span class="token operator">+</span> a<span class="token punctuation">;</span> <span class="token comment">// Infinity</span>
a <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">970</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Infinity</span>

<span class="token comment">// \u65E0\u7A77\u9664\u4EE5\u65E0\u7A77 </span>
<span class="token number">Infinity</span> <span class="token operator">/</span> <span class="token operator">-</span><span class="token number">Infinity</span> <span class="token comment">//NaN</span>

<span class="token comment">// \u6709\u7A77\u6B63\u6570\u9664\u4EE5Infinity</span>
<span class="token number">1</span> <span class="token operator">/</span> <span class="token number">Infinity</span> <span class="token comment">// 0</span>

<span class="token comment">// \u6709\u7A77\u8D1F\u6570\u9664\u4EE5Infinity</span>
<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">Infinity</span> <span class="token comment">// -0</span>
</code></pre></div><h4 id="\u65E0\u7A77\u6570\u68C0\u6D4B" tabindex="-1">\u65E0\u7A77\u6570\u68C0\u6D4B <a class="header-anchor" href="#\u65E0\u7A77\u6570\u68C0\u6D4B" aria-hidden="true">#</a></h4><div class="language-js"><pre><code>  v <span class="token operator">===</span> <span class="token number">Infinity</span>
  v <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">Infinity</span>
</code></pre></div><h3 id="\u96F6\u503C-0\u3001-0" tabindex="-1">\u96F6\u503C(0\u3001-0) <a class="header-anchor" href="#\u96F6\u503C-0\u3001-0" aria-hidden="true">#</a></h3><h4 id="\u7528\u9014-2" tabindex="-1">\u7528\u9014 <a class="header-anchor" href="#\u7528\u9014-2" aria-hidden="true">#</a></h4><p>-0 \u662F\u4E00\u4E9B\u6570\u5B66\u8FD0\u7B97\u4E2D\u4F1A\u51FA\u73B0</p><h4 id="\u8FD0\u7B97" tabindex="-1">\u8FD0\u7B97 <a class="header-anchor" href="#\u8FD0\u7B97" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">/</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>
</code></pre></div><p>-0\u7684\u8F6C\u6362</p><div class="language-js"><pre><code>a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;0&quot;</span>
a <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;0&quot;</span>
<span class="token function">String</span><span class="token punctuation">(</span> a <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;0&quot;</span>
<span class="token comment">// JSON\u4E5F\u5982\u6B64\uFF0C\u5F88\u5947\u602A</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span> a <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;0&quot;\u800C\u4E0D\u662F&quot;-0&quot;</span>

<span class="token operator">+</span><span class="token string">&quot;-0&quot;</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>
<span class="token function">Number</span><span class="token punctuation">(</span> <span class="token string">&quot;-0&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span> <span class="token string">&quot;-0&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -0</span>

<span class="token comment">// \u6BD4\u8F83\u64CD\u4F5C</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">/</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">;</span>

a <span class="token operator">==</span> b<span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token operator">-</span><span class="token number">0</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
a <span class="token operator">===</span> b<span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token operator">-</span><span class="token number">0</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token number">0</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
a <span class="token operator">&gt;</span> b<span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h4 id="\u533A\u52060\u548C-0" tabindex="-1">\u533A\u52060\u548C-0 <a class="header-anchor" href="#\u533A\u52060\u548C-0" aria-hidden="true">#</a></h4><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">isNegZero</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  n <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> n <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u6848\u4F8B</span>
<span class="token function">isNegZero</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isNegZero</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token operator">/</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isNegZero</span><span class="token punctuation">(</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="\u7279\u6B8A\u7B49\u5F0F\u7684\u7EDF\u4E00\u5316\u5904\u7406-object-is" tabindex="-1">\u7279\u6B8A\u7B49\u5F0F\u7684\u7EDF\u4E00\u5316\u5904\u7406 <a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a>() <a class="header-anchor" href="#\u7279\u6B8A\u7B49\u5F0F\u7684\u7EDF\u4E00\u5316\u5904\u7406-object-is" aria-hidden="true">#</a></h3><p>\u5BF9\u4E8E\u7279\u6B8A\u7B49\u5F0F\u7684\u7EDF\u4E00\u5904\u7406(\u80FD\u591F\u5904\u7406 NaN -0) <a href="http://Object.is" target="_blank" rel="noopener noreferrer">Object.is</a>()</p><div class="language-js"><pre><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">0</span><span class="token punctuation">;</span>

Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span> a<span class="token punctuation">,</span> <span class="token number">NaN</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span> b<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span> b<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>

<span class="token comment">//\u4E00\u4E2A\u7B80\u5355\u7684polyfill</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Object<span class="token punctuation">.</span>is<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Object<span class="token punctuation">.</span><span class="token function-variable function">is</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v1<span class="token punctuation">,</span> v2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u662F-0</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> v2 <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">1</span> <span class="token operator">/</span> v1 <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">/</span> v2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5224\u65AD\u662F\u5426\u662FNaN</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>v1 <span class="token operator">!==</span> v1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> v2 <span class="token operator">!==</span> v2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5176\u4ED6\u60C5\u51B5</span>
      <span class="token keyword">return</span> v1 <span class="token operator">===</span> v2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,46),e=[o];function c(l,u,r,k,i,m){return a(),s("div",null,e)}var h=n(t,[["render",c]]);export{b as __pageData,h as default};

import{_ as n,c as s,o as a,a as t}from"./app.a3c81315.js";const m='{"title":"base64\u7F16\u7801","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u4F18\u7F3A\u70B9","slug":"\u4F18\u7F3A\u70B9"},{"level":2,"title":"\u5E94\u7528\u573A\u666F","slug":"\u5E94\u7528\u573A\u666F"},{"level":2,"title":"\u7F16\u7801\u89E3\u7801\u65B9\u5F0F","slug":"\u7F16\u7801\u89E3\u7801\u65B9\u5F0F"},{"level":3,"title":"\u6D4F\u89C8\u5668\u5185\u7F6E\uFF0C\u517C\u5BB9\u6027\u826F\u597D","slug":"\u6D4F\u89C8\u5668\u5185\u7F6E\uFF0C\u517C\u5BB9\u6027\u826F\u597D"},{"level":3,"title":"base64.js","slug":"base64-js"}],"relativePath":"\u57FA\u7840/\u7F51\u7EDC\u539F\u7406/HTTP/base64\u7F16\u7801.md"}',p={},e=t(`<h1 id="base64\u7F16\u7801" tabindex="-1">base64\u7F16\u7801 <a class="header-anchor" href="#base64\u7F16\u7801" aria-hidden="true">#</a></h1><p>\u7F16\u7801\u53EA\u662F\u573A\u666F\u4E0B\u4E00\u4E2A\u5B9E\u4F53\u7684\u8868\u793A\u65B9\u5F0F\uFF0C\u5404\u79CD\u7F16\u7801\u5404\u6709\u597D\u5904\uFF0C\u800Cbase64\u4E5F\u6709\u5B83\u7684\u597D\u5904\uFF0C\u5176\u672C\u8D28\u662F\u4E00\u79CD\u5C06\u4E8C\u8FDB\u5236\u6570\u636E\u8F6C\u6210\u6587\u672C\u6570\u636E\u7684\u65B9\u6848</p><h2 id="\u4F18\u7F3A\u70B9" tabindex="-1">\u4F18\u7F3A\u70B9 <a class="header-anchor" href="#\u4F18\u7F3A\u70B9" aria-hidden="true">#</a></h2><ul><li>\u7F3A\u70B9</li></ul><p>\u6570\u636E\u6BD4\u539F\u5148\u5927\u4E09\u5206\u4E4B\u4E00</p><h2 id="\u5E94\u7528\u573A\u666F" tabindex="-1">\u5E94\u7528\u573A\u666F <a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a></h2><ul><li>\u56FE\u7247\u5185\u8054</li></ul><p>\u5C06\u4E8C\u8FDB\u5236\u8D44\u6E90\u8FDB\u884Cbase64\u7F16\u7801\uFF0C\u5185\u8054\u5230\u6587\u4EF6\u4E2D\uFF0C\u53EF\u4EE5\u51CF\u5C11http\u8BF7\u6C42\uFF0C\u4F46\u662F\u76EE\u524D\u5728http\u4F18\u5316\u4E0B\uFF0C\u6B64\u65B9\u6848\u5DF2\u7ECF\u88AB\u8D28\u7591\u6709\u8D1F\u4F18\u5316\u7684\u5ACC\u7591\uFF0C\u5728\u6743\u8861\u4E00\u6B21\u8BF7\u6C42\u7684\u6210\u672C\u548C\u6587\u4EF6\u5185\u8054\u5927\u5C0F\u901F\u5EA6\u4E0B\uFF0C\u53EF\u4EE5\u4F7F\u7528</p><ul><li>\u52A0\u5BC6</li></ul><p>base64\u53EF\u4EE5\u4F5C\u4E3A\u52A0\u5BC6\u7B97\u6CD5\u7684\u7B80\u5355\u5B9E\u73B0\uFF0C\u6548\u7387\u8F83\u9AD8</p><h2 id="\u7F16\u7801\u89E3\u7801\u65B9\u5F0F" tabindex="-1">\u7F16\u7801\u89E3\u7801\u65B9\u5F0F <a class="header-anchor" href="#\u7F16\u7801\u89E3\u7801\u65B9\u5F0F" aria-hidden="true">#</a></h2><h3 id="\u6D4F\u89C8\u5668\u5185\u7F6E\uFF0C\u517C\u5BB9\u6027\u826F\u597D" tabindex="-1">\u6D4F\u89C8\u5668\u5185\u7F6E\uFF0C\u517C\u5BB9\u6027\u826F\u597D <a class="header-anchor" href="#\u6D4F\u89C8\u5668\u5185\u7F6E\uFF0C\u517C\u5BB9\u6027\u826F\u597D" aria-hidden="true">#</a></h3><div class="language-js"><pre><code>window<span class="token punctuation">.</span>atob <span class="token comment">// \u7F16\u7801</span>

window<span class="token punctuation">.</span>btoa <span class="token comment">// \u89E3\u7801</span>
</code></pre></div><p><strong>\u5B58\u5728\u95EE\u9898</strong></p><p>\u4E2D\u6587\u7F16\u7801\u4F1A\u62A5\u9519\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5982\u4E0B\u5904\u7406\u65B9\u5F0F</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">b64EncodeUnicode</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// first we use encodeURIComponent to get percent-encoded UTF-8,</span>
    <span class="token comment">// then we convert the percent encodings into raw bytes which</span>
    <span class="token comment">// can be fed into btoa.</span>
    <span class="token keyword">return</span> <span class="token function">btoa</span><span class="token punctuation">(</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">%([0-9A-F]{2})</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token function">toSolidBytes</span><span class="token punctuation">(</span><span class="token parameter">match<span class="token punctuation">,</span> p1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token string">&#39;0x&#39;</span> <span class="token operator">+</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">b64DecodeUnicode</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Going backwards: from bytestream, to percent-encoding, to original string.</span>
    <span class="token keyword">return</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span><span class="token function">atob</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&#39;%&#39;</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">&#39;00&#39;</span> <span class="token operator">+</span> c<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">b64DecodeUnicode</span><span class="token punctuation">(</span><span class="token string">&#39;4pyTIMOgIGxhIG1vZGU=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;\u2713 \xE0 la mode&quot;</span>
<span class="token function">b64DecodeUnicode</span><span class="token punctuation">(</span><span class="token string">&#39;Cg==&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;\\n&quot;</span>
</code></pre></div><h3 id="base64-js" tabindex="-1">base64.js <a class="header-anchor" href="#base64-js" aria-hidden="true">#</a></h3><p>\u4E00\u4E2A\u901A\u7528\u7684\u5E93\uFF0C\u9700\u8981\u8003\u8651\u6BD4\u8F83\u65E7\u7684\u73AF\u5883\u517C\u5BB9\uFF0C\u5C31\u9700\u8981\u7528\u5230\u5B83\u4E86</p>`,18),o=[e];function c(u,l,i,k,r,d){return a(),s("div",null,o)}var f=n(p,[["render",c]]);export{m as __pageData,f as default};

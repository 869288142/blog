import{_ as n,c as s,o as a,a as t}from"./app.a3c81315.js";const y='{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"\u540E\u7AEF/egg/Koa\u5E2E\u6211\u4EEC\u505A\u4E86\u4EC0\u4E48.md"}',p={},o=t(`<p>\u6574\u7406web\u6E32\u67D3\u601D\u8DEF\uFF0C\u4E0EKOA\u4F5C\u6BD4\u8F83 1.\u5F00\u542F\u670D\u52A1\u5668\u5E76\u76D1\u542C\u7AEF\u53E3\uFF0C\u6CE8\u518C\u76D1\u542C\u4E8B\u4EF6</p><div class="language-js"><pre><code>    <span class="token comment">// \u539F\u751F</span>
    <span class="token keyword">let</span> http  <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// res.setHeader(&#39;Content-Type&#39;, &#39;text/html&#39;)</span>
        <span class="token comment">// res.end(&#39;ok&#39;)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token comment">//port\u4E3A\u7AEF\u53E3</span>
    <span class="token comment">// Koa  \u5C06\u76D1\u542C\u4E8B\u4EF6request\u79FB\u51FA\u6784\u9020\uFF0C\u8BBE\u8BA1\u5230\u4E2D\u95F4\u4EF6\u5185</span>
    <span class="token keyword">let</span> Koa <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">Koa</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>
</code></pre></div><p>2.\u8BF7\u6C42\u4FE1\u606F\u5206\u6790url\u6A21\u5757 1.\u8DEF\u5F84url.parse(req.url) \u8BF7\u6C42\u8DEF\u5F84\u7684\u83B7\u53D6\u4EE5\u53CA\u8BF7\u6C42\u7C7B\u578B\u7684\u83B7\u53D6(\u8FD9\u91CC\u88ABKoa\u5904\u7406\u5E76\u5305\u88C5\u6210\u4E00\u4E2Arequest\u5BF9\u8C61)</p><div class="language-js"><pre><code>    <span class="token comment">// \u539F\u751F</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> url <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        <span class="token keyword">let</span> method <span class="token operator">=</span> req<span class="token punctuation">.</span>method
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Koa  \u5C06\u4FE1\u606F\u5C01\u88C5\u5230request\u5BF9\u8C61\u4E0A\uFF0C\u5E76\u53EF\u4EE5\u901A\u8FC7\u522B\u540D\u7B80\u5316\u8BBF\u95EE</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">ctx</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> url <span class="token operator">=</span> ctx<span class="token punctuation">.</span>url
        <span class="token keyword">let</span> method <span class="token operator">=</span> ctx<span class="token punctuation">.</span>method
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    
</code></pre></div><p>2.\u53C2\u6570\u63A5\u53D7querystring,\u4EE5\u53CAPOST\u65B9\u6CD5\u53C2\u6570\u83B7\u53D6(\u76D1\u542Cres\u7684data\u4E8B\u4EF6\uFF0C\u5728end\u65B9\u6CD5\u4E2D\u83B7\u53D6)(\u8FD9\u91CC\u8BBE\u8BA1\u6210\u4E86\u4E00\u4E2Akoa-bodyparse\u4E2D\u95F4\u4EF6)</p><div class="language-js"><pre><code><span class="token comment">//get</span>
    <span class="token comment">// \u539F\u751F</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> url <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        <span class="token keyword">let</span> query <span class="token operator">=</span> <span class="token function">querystring</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>query<span class="token punctuation">)</span>    
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Koa  \u5C06\u4FE1\u606F\u5C01\u88C5\u5230request\u5BF9\u8C61\u4E0A\uFF0C\u5E76\u53EF\u4EE5\u901A\u8FC7\u522B\u540D\u7B80\u5316\u8BBF\u95EE</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">ctx</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> query <span class="token operator">=</span> ctx<span class="token punctuation">.</span>query
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//post</span>
    <span class="token comment">// \u539F\u751F</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> content
        req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            content<span class="token operator">+=</span>chunk
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> query <span class="token operator">=</span> querystring<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Koa  \u5C06\u8FC7\u7A0B\u5C01\u88C5\u5230\u4E2D\u95F4\u4EF6\u53BB</span>
    <span class="token keyword">let</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-bodyparser&#39;</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">boodyParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">ctx</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> postQuery <span class="token operator">=</span> querystring<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>3.\u9759\u6001\u8D44\u6E90\u4E0E\u52A8\u6001\u8D44\u6E90(\u8FD4\u56DE\u5934\u4FE1\u606F\u5DF2\u7ECF\u88ABKoa\u5904\u7406) \u9759\u6001\u8D44\u6E90 \u8BBE\u5B9A\u9759\u6001\u8D44\u6E90\u8DEF\u5F84\uFF0C\u5BF9\u9759\u6001\u8D44\u6E90\u8DEF\u5F84\u7ED3\u5408fs\u6A21\u5757\u8FD4\u56DE(\u4E2D\u95F4\u4EF6)</p><div class="language-js"><pre><code>    <span class="token comment">// \u539F\u751F</span>
        <span class="token comment">//\u901A\u8FC7fs\u8BBF\u95EE\u9759\u6001\u8D44\u6E90\uFF0C\u9700\u8981\u624B\u52A8\u8BBE\u7F6E\u5185\u5BB9\u7C7B\u578B\u4EE5\u53CA\u72B6\u6001\u7801</span>
    <span class="token keyword">function</span> <span class="token function">staticSend</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text/html;charset=utf-8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> statusCode<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span>statusCode<span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token constant">STATUS_CODES</span><span class="token punctuation">[</span>statusCode<span class="token punctuation">]</span><span class="token punctuation">,</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
        content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> url <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
		<span class="token function">staticSend</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// Koa \u901A\u8FC7koa-static-cache\u4E2D\u95F4\u4EF6\u53EF\u4EE5\u8BBE\u7F6E\u9759\u6001\u8D44\u6E90\u8BBF\u95EE\u89C4\u5219,\u53EA\u9700\u5B9A\u4E49\u8BBF\u95EE\u8DEF\u5F84\u5373\u53EF	</span>
	<span class="token keyword">const</span> koaStaticCache <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-static-cache&#39;</span><span class="token punctuation">)</span>
	app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span> <span class="token function">koaStaticCache</span><span class="token punctuation">(</span> __dirname <span class="token operator">+</span> <span class="token string">&#39;/static&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/public&#39;</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>

</code></pre></div><pre><code>\u52A8\u6001\u8D44\u6E90 \u8BBE\u5B9A\u5BF9\u5E94\u8DEF\u5F84\u7684\u8BF7\u6C42\u8FD4\u56DE  \u8DEF\u7531\u5904\u7406
</code></pre><div class="language-js"><pre><code>	<span class="token comment">// \u539F\u751F</span>
	<span class="token comment">// \u6839\u636E\u8BBF\u95EE\u8DEF\u5F84case\u7136\u540E\u5904\u7406\u5BF9\u5E94\u8DEF\u5F84\u8FD4\u56DE\u7ED3\u679C</span>
	<span class="token comment">// Koa</span>
	<span class="token keyword">const</span> Router <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;koa-router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/list&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ctx<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&#39;list.html&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
			users
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span> router<span class="token punctuation">.</span><span class="token function">routes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Koa\u6838\u5FC3\uFF1A\u8FD9\u4E2A\u6846\u67B6\u6709\u70B9\u601D\u60F3\u548Cwebpack\u7C7B\u4F3C\uFF0C\u7F16\u5199\u6587\u4EF6-&gt;loader/plugins-&gt;\u6700\u7EC8\u6587\u4EF6,\u800CKoa\u5C31\u662F,\u8BF7\u6C42-&gt;\u4E2D\u95F4\u4EF6-&gt;\u8FD4\u56DE \u5B83\u628A\u8BF7\u6C42\u4E0E\u8FD4\u56DE\u4F18\u96C5\u5730\u5904\u7406\u597D\u4E86,\u6211\u4EEC\u53EA\u9700\u8981\u5173\u6CE8\u4E2D\u95F4\u90E8\u5206\u903B\u8F91\uFF0C\u5373\u4E2D\u95F4\u4EF6</p>`,11),e=[o];function c(u,l,k,r,i,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{y as __pageData,g as default};

import{_ as n,c as s,o as a,a as p}from"./app.a3c81315.js";const f='{"title":"\u62F7\u8D1D","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D\u7684\u533A\u522B\uFF1A","slug":"\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D\u7684\u533A\u522B\uFF1A"},{"level":2,"title":"\u5B9E\u73B0\u65B9\u6848\uFF1A","slug":"\u5B9E\u73B0\u65B9\u6848\uFF1A"},{"level":3,"title":"\u6D45\u62F7\u8D1D","slug":"\u6D45\u62F7\u8D1D"},{"level":3,"title":"\u6DF1\u62F7\u8D1D","slug":"\u6DF1\u62F7\u8D1D"},{"level":3,"title":"\u9012\u5F52\u7206\u6808","slug":"\u9012\u5F52\u7206\u6808"},{"level":3,"title":"\u5FAA\u73AF\u5F15\u7528","slug":"\u5FAA\u73AF\u5F15\u7528"},{"level":2,"title":"\u603B\u7ED3\uFF1A","slug":"\u603B\u7ED3\uFF1A"}],"relativePath":"\u524D\u7AEF/\u524D\u7AEF\u57FA\u7840/JS/\u8BED\u6CD5/\u6DF1\u62F7\u8D1D\u4E0E\u6D45\u62F7\u8D1D.md"}',t={},o=p(`<h1 id="\u62F7\u8D1D" tabindex="-1">\u62F7\u8D1D <a class="header-anchor" href="#\u62F7\u8D1D" aria-hidden="true">#</a></h1><h2 id="\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D\u7684\u533A\u522B\uFF1A" tabindex="-1">\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D\u7684\u533A\u522B\uFF1A <a class="header-anchor" href="#\u6D45\u62F7\u8D1D\u4E0E\u6DF1\u62F7\u8D1D\u7684\u533A\u522B\uFF1A" aria-hidden="true">#</a></h2><p>\u6D45\u62F7\u8D1D\uFF1A</p><p>\u5BF9\u57FA\u672C\u7C7B\u578B\u548C\u5F15\u7528\u7C7B\u578B\u53EA\u8FDB\u884C\u503C\u7684\u62F7\u8D1D\uFF0C\u5373\uFF0C\u62F7\u8D1D\u5F15\u7528\u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u53EA\u5BF9\u5F15\u7528\u5BF9\u8C61\u7684\u5185\u5B58\u5730\u5740\u62F7\u8D1D\uFF0C\u65B0\u65E7\u5F15\u7528\u5C5E\u6027\u6307\u5411\u540C\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u4FEE\u6539\u4EFB\u610F\u4E00\u4E2A\u90FD\u4F1A\u5F71\u54CD\u6240\u6709\u5F15\u7528\u5F53\u524D\u5BF9\u8C61\u7684\u53D8\u91CF\u3002</p><p>\u6DF1\u62F7\u8D1D\uFF1A</p><p>\u5BF9\u5F15\u7528\u7C7B\u578B\u6240\u5F15\u7528\u7684\u5BF9\u8C61\u4E5F\u8FDB\u884C\u62F7\u8D1D\u3002\u4F7F\u5F97\u65B0\u65E7\u5F15\u7528\u5C5E\u6027\u6307\u5411\u4E0D\u540C\u7684\u5BF9\u8C61\uFF0C\u8FBE\u5230\u4E24\u8005\u72B6\u6001\u5206\u79BB\u7684\u6548\u679C\u3002</p><h2 id="\u5B9E\u73B0\u65B9\u6848\uFF1A" tabindex="-1">\u5B9E\u73B0\u65B9\u6848\uFF1A <a class="header-anchor" href="#\u5B9E\u73B0\u65B9\u6848\uFF1A" aria-hidden="true">#</a></h2><h3 id="\u6D45\u62F7\u8D1D" tabindex="-1">\u6D45\u62F7\u8D1D <a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a></h3><ul><li>\u76F4\u63A5\u904D\u5386\u5C5E\u6027\u7136\u540E\u8FDB\u884C\u8D4B\u503C</li></ul><div class="language-js"><pre><code><span class="token function">shallowClone</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> origin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>k<span class="token punctuation">,</span> v<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        target<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target
<span class="token punctuation">}</span>
</code></pre></div><ul><li>Object.assign()\u65B9\u6CD5\u53EF\u4EE5\u7528\u4E8E\u5408\u5E76\u5BF9\u8C61\uFF0C\u5E76\u4E14\u53EA\u5728\u9876\u5C42\u5C5E\u6027\u4E0A\u8FDB\u884C\u5408\u5E76\u3002</li></ul><div class="language-javascript"><pre><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: 2}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: 2}</span>
obj2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//\u4FEE\u6539obj2.x</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: 2}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 2, y: 2}</span>
</code></pre></div><p>\u7F3A\u70B9</p><p>\u53EA\u5B9E\u73B0\u4E86\u5408\u5E76\u65F6\u9876\u5C42\u8FD9\u4E00\u5C42\u7684\u6DF1\u62F7\u8D1D\u3002</p><h3 id="\u6DF1\u62F7\u8D1D" tabindex="-1">\u6DF1\u62F7\u8D1D <a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a></h3><ul><li>JSON.parse(JSON.stringify(obj))\u5229\u7528 JSON \u5BF9\u8C61\u4E2D\u8F6C\u4E00\u6B21\uFF0C\u5B9E\u73B0\u6DF1\u62F7\u8D1D\u3002</li></ul><div class="language-javascript"><pre><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">m</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: {m: 1}}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: {m: 1}}</span>
obj2<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//\u4FEE\u6539obj2.y.m</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: {m: 1}}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 2, y: {m: 2}}</span>
</code></pre></div><p>\u7F3A\u70B9\uFF1A</p><p>\u7531\u4E8E JSON \u5BF9\u8C61\u8F6C\u5316\u89C4\u5219,undefined\u3001\u4EFB\u610F\u7684\u51FD\u6570\u4EE5\u53CA symbol \u503C\uFF0C\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u88AB\u5FFD\u7565\uFF08\u51FA\u73B0\u5728\u975E\u6570\u7EC4\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u4E2D\u65F6\uFF09\u6216\u8005\u88AB\u8F6C\u6362\u6210 null\uFF08\u51FA\u73B0\u5728\u6570\u7EC4\u4E2D\u65F6\uFF09\u4E14\u53EA\u9002\u7528\u4E8E\u80FD\u591F\u7528 JSON \u8868\u793A\u7684\u5BF9\u8C61\u3002</p><p>\u4F8B\u5B50\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token function-variable function">z</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">z1<span class="token punctuation">,</span> z2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> z1 <span class="token operator">+</span> z2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1, y: undefined, z: \u0192, a: Symbol(foo)}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{&quot;x&quot;:1}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{x: 1}</span>
</code></pre></div><ul><li>\u4F7F\u7528 for in \u904D\u5386\u539F\u578B\u4EE5\u53CA\u81EA\u8EAB\u6240\u6709\u53EF\u679A\u4E3E\u5C5E\u6027\uFF0C\u5728\u9047\u5230 object \u65F6\u9012\u5F52\u81EA\u8EAB\u5B8C\u6210\u5BF9\u8C61\u6DF1\u62F7\u8D1D\u3002</li></ul><div class="language-javascript"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">fnDeepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>splice <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        key<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fnDeepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5982\u679C\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u4E3Aobject\u7684\u65F6\u5019\uFF0C\u9012\u5F52\u8C03\u7528deepClone\uFF0C\u5373\u518D\u628A\u67D0\u4E2A\u503C\u5BF9\u8C61\u590D\u5236\u4E00\u4EFD\u5230\u65B0\u7684\u5BF9\u8C61\u7684\u5BF9\u5E94\u503C\u4E2D</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u5982\u679C\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u4E0D\u4E3Aobject\u7684\u65F6\u5019\uFF0C\u76F4\u63A5\u590D\u5236\u53C2\u6570\u5BF9\u8C61\u7684\u6BCF\u4E00\u4E2A\u952E/\u503C\u5230\u65B0\u5BF9\u8C61\u5BF9\u5E94\u7684\u952E/\u503C\u4E2D</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">brother</span><span class="token operator">:</span> <span class="token string">&quot;wangzhipeng&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">father</span><span class="token operator">:</span> <span class="token string">&quot;wanglicai&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">mother</span><span class="token operator">:</span> <span class="token string">&quot;sunaiyun&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;gino&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&quot;27&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">;</span>
obj2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&quot;33&quot;</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span><span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1111</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u70B9\uFF1A</p><p>\u652F\u6301object\u548Carray\u7C7B\u578B</p><ul><li>\u4F7F\u7528 Object.create \u4EE5 obj \u539F\u578B\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u7136\u540E\u4F7F\u7528 Objcet.getOwnPropertyDescriptors \u83B7\u53D6\u5BF9\u8C61\u5C5E\u6027\u63CF\u8FF0\u7B26\u6570\u7EC4\u6765\u521B\u5EFA\u8FD9\u4E2A\u5BF9\u8C61<strong>\u5B8C\u5168\u5B9E\u73B0\u4ECD\u9700\u9012\u5F52</strong></li></ul><div class="language-javascript"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">deepClone</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> copy <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
        Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>
        Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> copy<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">family</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">brother</span><span class="token operator">:</span> <span class="token string">&quot;wangzhipeng&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">father</span><span class="token operator">:</span> <span class="token string">&quot;wanglicai&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">mother</span><span class="token operator">:</span> <span class="token string">&quot;sunaiyun&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;gino&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token string">&quot;male&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&quot;27&quot;</span>
    <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span>sex <span class="token operator">=</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">;</span>
obj2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&quot;33&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4F18\u70B9:\u5728\u5BF9\u8C61\u5C5E\u6027\u4E2D\u5141\u8BB8\u51FD\u6570\u3001undefined\u3001Symbol \u62F7\u8D1D,\u8FD8\u80FD\u7EE7\u627F\u539F\u578B</p><h3 id="\u9012\u5F52\u7206\u6808" tabindex="-1">\u9012\u5F52\u7206\u6808 <a class="header-anchor" href="#\u9012\u5F52\u7206\u6808" aria-hidden="true">#</a></h3><p>\u56E0\u4E3A\u9012\u5F52\u7684\u5173\u7CFB\uFF0C\u6808\u4FDD\u5B58\u4E86\u8C03\u7528\u5E27\uFF0C\u76F4\u5230\u9012\u5F52\u7EC8\u6B62\u6761\u4EF6\uFF0C\u518D\u4F9D\u6B21\u8FD4\u56DE\u7ED3\u675F\u51FD\u6570\u8C03\u7528\uFF0C\u672C\u6765\u53EF\u4EE5\u4F7F\u7528\u5C3E\u8C03\u7528\u7684\u65B9\u5F0F\u6765\u6D88\u9664\u8C03\u7528\u5E27\uFF0C\u4F46\u5728\u8FD9\u91CC\u4E0D\u884C\uFF0C\u9700\u8981\u91C7\u7528\u8FED\u4EE3\u65B9\u5F0F\uFF0C\u5C06\u5BF9\u8C61\u770B\u6210\u4E00\u4E2A\u6811\uFF0C\u4F7F\u7528\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\u65B9\u5F0F\u6765\u5B9E\u73B0</p><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">cloneLoop</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6808</span>
  <span class="token keyword">const</span> loopList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
          <span class="token literal-property property">parent</span><span class="token operator">:</span> root<span class="token punctuation">,</span>
          <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> x<span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">while</span><span class="token punctuation">(</span>loopList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6DF1\u5EA6\u4F18\u5148</span>
      <span class="token keyword">const</span> node <span class="token operator">=</span> loopList<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
      <span class="token keyword">const</span> key <span class="token operator">=</span> node<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
      <span class="token keyword">const</span> data <span class="token operator">=</span> node<span class="token punctuation">.</span>data<span class="token punctuation">;</span>

      <span class="token comment">// \u521D\u59CB\u5316\u8D4B\u503C\u76EE\u6807\uFF0Ckey\u4E3Aundefined\u5219\u62F7\u8D1D\u5230\u7236\u5143\u7D20\uFF0C\u5426\u5219\u62F7\u8D1D\u5230\u5B50\u5143\u7D20</span>
      <span class="token keyword">let</span> res <span class="token operator">=</span> parent<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> key <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          res <span class="token operator">=</span> parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                  <span class="token comment">// \u4E0B\u4E00\u6B21\u5FAA\u73AF</span>
                  loopList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                      <span class="token literal-property property">parent</span><span class="token operator">:</span> res<span class="token punctuation">,</span>
                      <span class="token literal-property property">key</span><span class="token operator">:</span> k<span class="token punctuation">,</span>
                      <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span>
                  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                  res<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
              <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">cloneLoop</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">k</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u5FAA\u73AF\u5F15\u7528" tabindex="-1">\u5FAA\u73AF\u5F15\u7528 <a class="header-anchor" href="#\u5FAA\u73AF\u5F15\u7528" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">cloneForce</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// =============</span>
    <span class="token keyword">const</span> uniqueList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u7528\u6765\u53BB\u91CD</span>
    <span class="token comment">// =============</span>

    <span class="token keyword">let</span> root <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token comment">// \u5FAA\u73AF\u6570\u7EC4</span>
    <span class="token keyword">const</span> loopList <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token literal-property property">parent</span><span class="token operator">:</span> root<span class="token punctuation">,</span>
            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
            <span class="token literal-property property">data</span><span class="token operator">:</span> x<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>loopList<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6DF1\u5EA6\u4F18\u5148</span>
        <span class="token keyword">const</span> node <span class="token operator">=</span> loopList<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> parent <span class="token operator">=</span> node<span class="token punctuation">.</span>parent<span class="token punctuation">;</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> node<span class="token punctuation">.</span>key<span class="token punctuation">;</span>
        <span class="token keyword">const</span> data <span class="token operator">=</span> node<span class="token punctuation">.</span>data<span class="token punctuation">;</span>

        <span class="token comment">// \u521D\u59CB\u5316\u8D4B\u503C\u76EE\u6807\uFF0Ckey\u4E3Aundefined\u5219\u62F7\u8D1D\u5230\u7236\u5143\u7D20\uFF0C\u5426\u5219\u62F7\u8D1D\u5230\u5B50\u5143\u7D20</span>
        <span class="token keyword">let</span> res <span class="token operator">=</span> parent<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> key <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            res <span class="token operator">=</span> parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token comment">// =============</span>
        <span class="token comment">// \u6570\u636E\u5DF2\u7ECF\u5B58\u5728</span>
        <span class="token keyword">let</span> uniqueData <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>uniqueList<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>uniqueData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            parent<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> uniqueData<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// \u4E2D\u65AD\u672C\u6B21\u5FAA\u73AF</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6570\u636E\u4E0D\u5B58\u5728</span>
        <span class="token comment">// \u4FDD\u5B58\u6E90\u6570\u636E\uFF0C\u5728\u62F7\u8D1D\u6570\u636E\u4E2D\u5BF9\u5E94\u7684\u5F15\u7528</span>
        uniqueList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">source</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
            <span class="token literal-property property">target</span><span class="token operator">:</span> res<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// =============</span>
    
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token keyword">in</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">// \u4E0B\u4E00\u6B21\u5FAA\u73AF</span>
                    loopList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                        <span class="token literal-property property">parent</span><span class="token operator">:</span> res<span class="token punctuation">,</span>
                        <span class="token literal-property property">key</span><span class="token operator">:</span> k<span class="token punctuation">,</span>
                        <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    res<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>source <span class="token operator">===</span> item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u603B\u7ED3\uFF1A" tabindex="-1">\u603B\u7ED3\uFF1A <a class="header-anchor" href="#\u603B\u7ED3\uFF1A" aria-hidden="true">#</a></h2><p>\u4EE5\u4E0A\u65B9\u6CD5\u6682\u672A\u5B9E\u73B0\u5305\u88C5\u5BF9\u8C61\uFF0CDate\u5BF9\u8C61\uFF0C\u6B63\u5219\u5BF9\u8C61\u7684\u6DF1\u62F7\u8D1D\uFF0C\u5C1A\u672A\u9A8C\u8BC1DOM\u5BF9\u8C61\u6DF1\u62F7\u8D1D\u540E\u529F\u80FD\u51FD\u6570\u662F\u5426\u6B63\u5E38\uFF0C\u5BF9\u4E8E\u540E\u53F0JSON\u5BF9\u8C61\u62F7\u8D1D\uFF0C\u5DF2\u7ECF\u8DB3\u591F</p>`,35),e=[o];function c(u,l,k,i,r,y){return a(),s("div",null,e)}var m=n(t,[["render",c]]);export{f as __pageData,m as default};

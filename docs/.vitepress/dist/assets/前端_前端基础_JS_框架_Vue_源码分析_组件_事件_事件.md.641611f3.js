import{_ as n,c as s,o as a,a as t}from"./app.a3c81315.js";const g='{"title":"\u4E8B\u4EF6","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u8BBE\u8BA1\u7406\u5FF5","slug":"\u8BBE\u8BA1\u7406\u5FF5"},{"level":3,"title":"\u4F18\u70B9","slug":"\u4F18\u70B9"},{"level":2,"title":"\u573A\u666F","slug":"\u573A\u666F"},{"level":2,"title":"\u5B9E\u73B0\u539F\u751F\u4E8B\u4EF6\u4FEE\u9970\u7B26","slug":"\u5B9E\u73B0\u539F\u751F\u4E8B\u4EF6\u4FEE\u9970\u7B26"},{"level":2,"title":"\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u6838\u5FC3\u6E90\u7801","slug":"\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u6838\u5FC3\u6E90\u7801"},{"level":2,"title":"\u610F\u5916\u6536\u83B7","slug":"\u610F\u5916\u6536\u83B7"}],"relativePath":"\u524D\u7AEF/\u524D\u7AEF\u57FA\u7840/JS/\u6846\u67B6/Vue/\u6E90\u7801\u5206\u6790/\u7EC4\u4EF6/\u4E8B\u4EF6/\u4E8B\u4EF6.md"}',p={},o=t(`<h1 id="\u4E8B\u4EF6" tabindex="-1">\u4E8B\u4EF6 <a class="header-anchor" href="#\u4E8B\u4EF6" aria-hidden="true">#</a></h1><h2 id="\u8BBE\u8BA1\u7406\u5FF5" tabindex="-1">\u8BBE\u8BA1\u7406\u5FF5 <a class="header-anchor" href="#\u8BBE\u8BA1\u7406\u5FF5" aria-hidden="true">#</a></h2><ul><li><p>\u533A\u5206\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u548C\u539F\u751F\u4E8B\u4EF6</p></li><li><p>\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u7528\u4E8E\u6539\u5584\u4F20\u9012\u4E8B\u4EF6\u51FD\u6570\u7684\u7E41\u7410</p></li><li><p>\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u4F5C\u7528\u4E8E\u7EC4\u4EF6\u672C\u8EAB\uFF0C\u539F\u751F\u4E8B\u4EF6\u4F5C\u7528\u4E8E\u6839\u8282\u70B9</p></li><li><p>\u5C06\u5E38\u89C1\u7684\u4E8B\u4EF6\u64CD\u4F5C\u4EE5\u4FEE\u9970\u7B26\u7684\u65B9\u5F0F\u5C01\u88C5\uFF0C\u5B9E\u73B0\u4E86\u5173\u6CE8\u70B9\u5206\u79BB</p></li></ul><h3 id="\u4F18\u70B9" tabindex="-1">\u4F18\u70B9 <a class="header-anchor" href="#\u4F18\u70B9" aria-hidden="true">#</a></h3><ul><li><p>\u539F\u751F\u4E8B\u4EF6\u81EA\u52A8\u7ED1\u5B9A\u5728\u6839\u5143\u7D20\uFF0C\u8FD9\u8986\u76D6\u4E86\u7EDD\u5927\u591A\u6570\u60C5\u51B5\uFF0C\u51CF\u5C11\u4E86\u8FD9\u90E8\u5206\u4EE3\u7801\u7684\u7F16\u5199</p></li><li><p>\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u7684\u6269\u5C55\u7B80\u5316\u4E86\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u7684\u5904\u7406</p></li><li><p>\u5B9E\u73B0\u4E86\u7236\u5B50\u7EC4\u4EF6\u4E8B\u4EF6\u7684\u5173\u6CE8\u70B9\u5206\u79BB\uFF0C\u5B50\u7EC4\u4EF6\u65E0\u9700\u5173\u5FC3\u6B64\u4E8B\u4EF6\u662F\u5426\u6CE8\u518C\uFF0C\u53EA\u9700\u8981\u7EF4\u62A4\u5185\u90E8\u63D0\u4EA4\u903B\u8F91</p></li></ul><h2 id="\u573A\u666F" tabindex="-1">\u573A\u666F <a class="header-anchor" href="#\u573A\u666F" aria-hidden="true">#</a></h2><div class="language-html"><pre><code><span class="token comment">&lt;!-- \u666E\u901A\u5143\u7D20\u76F4\u63A5\u7ED1\u5B9A\u539F\u751F\u4E8B\u4EF6 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- \u7EC4\u4EF6\u9ED8\u8BA4\u7ED1\u5B9A\u81EA\u5B9A\u4E49\u4E8B\u4EF6 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- native\u4FEE\u9970\u7B26\u4EE3\u8868\u539F\u751F\u4E8B\u4EF6 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-component</span> <span class="token attr-name">@click.native</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clickHandler<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-component</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h2 id="\u5B9E\u73B0\u539F\u751F\u4E8B\u4EF6\u4FEE\u9970\u7B26" tabindex="-1">\u5B9E\u73B0\u539F\u751F\u4E8B\u4EF6\u4FEE\u9970\u7B26 <a class="header-anchor" href="#\u5B9E\u73B0\u539F\u751F\u4E8B\u4EF6\u4FEE\u9970\u7B26" aria-hidden="true">#</a></h2><p>\u8FD9\u90E8\u5206\u5C5E\u4E8E\u6A21\u677F\u7F16\u8BD1\u7684\u5904\u7406</p><h2 id="\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u6838\u5FC3\u6E90\u7801" tabindex="-1">\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u6838\u5FC3\u6E90\u7801 <a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u4E8B\u4EF6\u6838\u5FC3\u6E90\u7801" aria-hidden="true">#</a></h2><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">eventsMixin</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">Vue</span><span class="token operator">:</span> Class<span class="token operator">&lt;</span>Component<span class="token operator">&gt;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hookRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^hook:</span><span class="token regex-delimiter">/</span></span>

  <span class="token comment">// \u6CE8\u518C\u81EA\u5B9A\u4E49\u4E8B\u4EF6\uFF0C\u53EF\u4EE5\u4F7F\u4E00\u4E2A\u6216\u8005\u6570\u7EC4</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$on</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> event<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span>event<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
      <span class="token comment">// optimize hook:event cost by using a boolean flag marked at registration</span>
      <span class="token comment">// instead of a hash lookup</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>hookRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span>_hasHookEvent <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>

  <span class="token comment">// \u6CE8\u518C\u53EA\u89E6\u53D1\u4E00\u6B21\u7684\u4E8B\u4EF6</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$once</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">fn</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">function</span> <span class="token function">on</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> on<span class="token punctuation">)</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>vm<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    on<span class="token punctuation">.</span>fn <span class="token operator">=</span> fn
    vm<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> on<span class="token punctuation">)</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>

  <span class="token comment">// \u9500\u6BC1\u81EA\u5B9A\u4E49\u4E8B\u4EF6</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$off</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token operator">?</span><span class="token operator">:</span> string <span class="token operator">|</span> Array<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">,</span> fn<span class="token operator">?</span><span class="token operator">:</span> Function</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token comment">// all</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_events <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token comment">// array of events</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> event<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        vm<span class="token punctuation">.</span><span class="token function">$off</span><span class="token punctuation">(</span>event<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token comment">// specific event</span>
    <span class="token keyword">const</span> cbs <span class="token operator">=</span> vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>cbs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
      <span class="token keyword">return</span> vm
    <span class="token punctuation">}</span>
    <span class="token comment">// specific handler</span>
    <span class="token keyword">let</span> cb
    <span class="token keyword">let</span> i <span class="token operator">=</span> cbs<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cb <span class="token operator">=</span> cbs<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token comment">// \u666E\u901A\u4E8B\u4EF6\u548C\u4E00\u6B21\u6027\u4E8B\u4EF6</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>cb <span class="token operator">===</span> fn <span class="token operator">||</span> cb<span class="token punctuation">.</span>fn <span class="token operator">===</span> fn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        cbs<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>

  <span class="token comment">// \u89E6\u53D1\u4E8B\u4EF6</span>
  <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">$emit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> lowerCaseEvent <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>lowerCaseEvent <span class="token operator">!==</span> event <span class="token operator">&amp;&amp;</span> vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>lowerCaseEvent<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">tip</span><span class="token punctuation">(</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Event &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>lowerCaseEvent<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; is emitted in component </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">formatComponentName</span><span class="token punctuation">(</span>vm<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> but the handler is registered for &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Note that HTML attributes are case-insensitive and you cannot use </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">v-on to listen to camelCase events when using in-DOM templates. </span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
          <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">You should probably use &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">hyphenate</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot; instead of &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;.</span><span class="token template-punctuation string">\`</span></span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> cbs <span class="token operator">=</span> vm<span class="token punctuation">.</span>_events<span class="token punctuation">[</span>event<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cbs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      cbs <span class="token operator">=</span> cbs<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token function">toArray</span><span class="token punctuation">(</span>cbs<span class="token punctuation">)</span> <span class="token operator">:</span> cbs
      <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token function">toArray</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> info <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">event handler for &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> cbs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">invokeWithErrorHandling</span><span class="token punctuation">(</span>cbs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> vm<span class="token punctuation">,</span> args<span class="token punctuation">,</span> vm<span class="token punctuation">,</span> info<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> vm
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Vue\u7684\u8BA2\u9605\u5728\u589E\u5F3A\u4E86\u4E00\u4E0B\u51E0\u4E2A\u70B9\uFF1A</p><ul><li>\u53EF\u4EE5\u4E00\u6B21\u5C06\u4E00\u4E2A\u56DE\u8C03\u6CE8\u518C\u5230\u591A\u4E2A\u4E8B\u4EF6\u4E0A</li></ul><div class="language-js"><pre><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;event1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;event2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span>
</code></pre></div><ul><li><p>\u53EF\u4EE5\u5220\u9664\u4E8B\u4EF6\u540C\u7279\u5B9A\u4E00\u4E2A</p></li><li><p>\u63D0\u4F9B\u4E86\u6CE8\u518C\u4E00\u6B21\u4E8B\u4EF6\u7684\u529F\u80FD</p></li></ul><h2 id="\u610F\u5916\u6536\u83B7" tabindex="-1">\u610F\u5916\u6536\u83B7 <a class="header-anchor" href="#\u610F\u5916\u6536\u83B7" aria-hidden="true">#</a></h2><p>\u9605\u8BFB\u6E90\u7801\u65F6\uFF0C\u53D1\u73B0Vue\u53EF\u4EE5\u5B9E\u73B0\u58F0\u660E\u5468\u671F\u81EA\u5B9A\u4E49\u4E8B\u4EF6</p><div class="language-html"><pre><code><span class="token comment">&lt;!-- @hook:lifeCycleHook=&quot;fn&quot; --&gt;</span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-button</span> <span class="token attr-name"><span class="token namespace">@hook:</span>created</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>t<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u867D\u7136\u4E0A\u8FF0\u4EE3\u7801\u76EE\u524D\u6B63\u5E38\uFF0C\u800C\u4E14\u4E5F\u4E0D\u662F\u79C1\u6709\u7684\uFF0C\u4F46\u662F\u53D1\u73B0\u5728devTools\u6CA1\u6709\u663E\u793A\u6B64\u4E8B\u4EF6\uFF0C\u6587\u6863\u4E5F\u6CA1\u6709\u63D0\u53CA\uFF0C\u4E0D\u5EFA\u8BAE\u5927\u5BB6\u4F7F\u7528</p>`,19),e=[o];function c(l,u,k,i,r,m){return a(),s("div",null,e)}var v=n(p,[["render",c]]);export{g as __pageData,v as default};

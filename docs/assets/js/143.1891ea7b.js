(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{231:function(t,a,s){"use strict";s.r(a);var n=s(28),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"跨域代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跨域代理"}},[t._v("#")]),t._v(" 跨域代理")]),t._v(" "),s("p",[t._v("现在使用vue大多使用了前后端分离模式，因此游览器经常显示跨域失败的信息，现在跨域的方式很多种，主要分两大类，ajax跨域，dom跨域，具体的方法就不例举啦。")]),t._v(" "),s("p",[t._v("vue-cli作为一个强大的脚手架，内置了一个简单的配置型跨域方式\n"),s("img",{attrs:{src:"https://raw.githubusercontent.com/869288142/photo/master/proxy.png"}}),t._v("\n找到目录下的config文件下，index.js中dev配置对象中的proxyTable属性，这里是一个对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("下面对这个对象属性进行解析：\n")])])]),s("img",{attrs:{src:"https://raw.githubusercontent.com/869288142/photo/master/proxyTableObj.png"}}),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" proxyTable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/api'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里的key就是axios的baseURL")]),t._v("\n        target"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://127.0.0.1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//访问域名")]),t._v("\n        changeOrigin"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开启跨域")]),t._v("\n        pathRewrite"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路径重写，")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^/api'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'api/index.php'")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换target中的请求地址")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("也就是设置axios的baseURL可以只设置为'/api'，然后在proxyTable里面定义匹配这个路径的代理配置对象，设置target为访问的域名，设置重写为访问域名的后缀，即域名后的地址，然后开启changeOrigin属性即可。")]),t._v(" "),s("p",[t._v("注意：配置好后由于这个文件不在src下，不会触发构建，每次修改需要重新npm run dev 来使用新的配置，此时成功会看到命令行输出代理服务器配置信息")])])}),[],!1,null,null,null);a.default=e.exports}}]);
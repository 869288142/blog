(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{251:function(t,a,s){"use strict";s.r(a);var n=s(0),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"显式类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 显式类型转换")]),t._v(" "),s("h2",{attrs:{id:"什么是显式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是显式","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是显式")]),t._v(" "),s("p",[t._v("这里的显式和隐式是以普遍的标准来进行讨论的，你能看出来是怎么回事，那么它对你是“显式”，相反你不知道的话，对你就是“隐式”，"),s("strong",[t._v("总而言之，显而易见即为显式，反之为隐式。")])]),t._v(" "),s("h2",{attrs:{id:"抽象操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#抽象操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 抽象操作")]),t._v(" "),s("p",[s("strong",[t._v("字符串、数字、布尔值之间类型转换的基本规则")]),t._v(" ，ES5定义了一些操作，诸如ToString、ToNumber、ToBoolean、ToPrimitive抽象操作")]),t._v(" "),s("h3",{attrs:{id:"tostring-负责处理非字符到字符串的强制类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring-负责处理非字符到字符串的强制类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" ToString 负责处理非字符到字符串的强制类型转换")]),t._v(" "),s("p",[t._v('undefined => "undefined"')]),t._v(" "),s("p",[t._v('null => "null"')]),t._v(" "),s("p",[t._v('number => "number"  ps:极大数和极小数用指数表示')]),t._v(" "),s("p",[t._v('boolean => "boolean"')]),t._v(" "),s("p",[t._v('Symbol => "symbol"')]),t._v(" "),s("p",[t._v("Object => instance.toString ||Object.prototype.toString //规则由抽象操作ToPrimitive抽象操作里完成")]),t._v(" "),s("h3",{attrs:{id:"tonumber-非数字到数字的强制类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tonumber-非数字到数字的强制类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" ToNumber 非数字到数字的强制类型转换")]),t._v(" "),s("p",[t._v("undefined => NaN")]),t._v(" "),s("p",[t._v("null => 0")]),t._v(" "),s("p",[t._v("boolean => true 1 false 0")]),t._v(" "),s("p",[t._v("Symbol => 无法转换，本身用途是为了解决命名冲突")]),t._v(" "),s("p",[t._v("string => 数字常量规则，失败为NaN，且0开头的十六进制按照十进制处理")]),t._v(" "),s("p",[t._v("Object => 由抽象操作ToPrimitive抽象操作，检查该值是否有valueof方法并且返回基本类型，有就对返回值进行强制转换，没有就使用toString的返回值来强制转换，两者都没有得到基本值，会产生TypeError错误，更详细的转换规则会在ToPrimitive抽象操作详解")]),t._v(" "),s("h3",{attrs:{id:"toboolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#toboolean","aria-hidden":"true"}},[t._v("#")]),t._v(" ToBoolean")]),t._v(" "),s("h4",{attrs:{id:"假值-falsy-value-列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#假值-falsy-value-列表","aria-hidden":"true"}},[t._v("#")]),t._v(" 假值(falsy value)列表")]),t._v(" "),s("p",[t._v('undefined null false +0、-0、NaN ""')]),t._v(" "),s("p",[s("strong",[t._v("假值对象 document.all")])]),t._v(" "),s("p",[t._v("假值对象是游览器废弃对象之后，为了分辨版本将其修改为假值对象，document.all就是其中一个例子\n"),s("img",{attrs:{src:"https://img2018.cnblogs.com/blog/1361028/201903/1361028-20190320100042359-1445921439.png",alt:""}})]),t._v(" "),s("p",[t._v("那为什么它要是假值呢？因为我们经常通过将document.all 强制类型转换为布尔值（比如\n在if 语句中）来判断浏览器是否是老版本的IE。IE 自诞生之日起就始终遵循浏览器标准，\n较其他浏览器更为有力地推动了Web 的发展。\nif(document.all) { /* it’s IE */ } 依然存在于许多程序中，也许会一直存在下去，这对\nIE 的用户体验来说不是一件好事。\n虽然我们无法彻底摆脱document.all，但为了让新版本更符合标准，IE 并不打算继续支持\nif (document.all) { .. }。\n“那我们应该怎么办？”\n“也许可以修改JavaScript 的类型机制，将document.all 作为假值来处理！”")]),t._v(" "),s("h4",{attrs:{id:"真值-除假值列表之外的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#真值-除假值列表之外的值","aria-hidden":"true"}},[t._v("#")]),t._v(" 真值 除假值列表之外的值")]),t._v(" "),s("h3",{attrs:{id:"toprimitive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#toprimitive","aria-hidden":"true"}},[t._v("#")]),t._v(" ToPrimitive")]),t._v(" "),s("p",[t._v("ToPrimitive运算符把对象转换为非对象类型，会调用对象内部[[DefaultValue]]，其规则如下:\n当用字符串 hint 调用 O 的 [[DefaultValue]] 内部方法，采用以下步骤：")]),t._v(" "),s("p",[s("strong",[t._v("使用字符串hint")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v('令 toString 为用参数 "toString" 调用对象 O 的 [[Get]] 内部方法的结果。')])]),t._v(" "),s("li",[s("p",[t._v("如果 IsCallable(toString) 是 true，则")]),t._v(" "),s("p",[t._v("a. 令 str 为用 O 作为 this 值，空参数列表调用 toString 的 [[Call]] 内部方法的结果。")]),t._v(" "),s("p",[t._v("b .如果 str 是原始值，返回 str。")])]),t._v(" "),s("li",[s("p",[t._v('令 valueOf 为用参数 "valueOf" 调用对象 O 的 [[Get]] 内部方法的结果。')])]),t._v(" "),s("li",[s("p",[t._v("如果 IsCallable(valueOf) 是 true，则")]),t._v(" "),s("p",[t._v("a. 令 val 为用 O 作为 this 值，空参数列表调用 valueOf 的 [[Call]] 内部方法的结果。")]),t._v(" "),s("p",[t._v("b. 如果 val 是原始值，返回 val。")])]),t._v(" "),s("li",[s("p",[t._v("抛出一个 TypeError 异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("用数字 hint")])]),t._v(" "),s("ol",[s("li",[s("p",[t._v('令 valueOf 为用参数 "valueOf" 调用对象 O 的 [[Get]] 内部方法的结果。')])]),t._v(" "),s("li",[s("p",[t._v("如果 IsCallable(valueOf) 是 true，则")]),t._v(" "),s("p",[t._v("a. 令 val 为用 O 作为 this 值，空参数列表调用 valueOf 的 [[Call]] 内部方法的结果。")]),t._v(" "),s("p",[t._v("b.如果 val 是原始值，返回 val。")])]),t._v(" "),s("li",[s("p",[t._v('令 toString 为用参数 "toString" 调用对象 O 的 [[Get]] 内部方法的结果。')])]),t._v(" "),s("li",[s("p",[t._v("如果 IsCallable(toString) 是 true，则")]),t._v(" "),s("p",[t._v("a. 令 str 为用 O 作为 this 值，空参数列表调用 toString 的 [[Call]] 内部方法的结果。")]),t._v(" "),s("p",[t._v("b. 如果 str 是原始值，返回 str。")])]),t._v(" "),s("li",[s("p",[t._v("抛出一个 TypeError 异常。")])])]),t._v(" "),s("p",[t._v("当不用 hint 调用 O 的 [[DefaultValue]] 内部方法，O 是 Date 对象的情况下仿佛 hint 是字符串一样解释它的行为，除此之外仿佛 hint 是数字一样解释它的行为。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("toPrimitive小结")]),t._v(" "),s("p",[t._v("如果有数字hint(提示)或无提示，那么会先尝试调用valueOf，若返回值不是基本值，再调用toString")]),t._v(" "),s("p",[t._v("如果有字符串提示，那么会先尝试调用toString，若返回值不是基本值，再调用valueOf")])]),t._v(" "),s("h2",{attrs:{id:"显式强制类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式强制类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 显式强制类型转换")]),t._v(" "),s("h3",{attrs:{id:"字符串和数字之间的显式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串和数字之间的显式转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符串和数字之间的显式转换")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number -> string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.调用String")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果是对象，则会依次调用toString、valueOf方法来获取字符串")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.调用toString ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// toString拥有第一个参数可以指定对应的数字进制")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string -> number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.调用Number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.14"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "42"')]),t._v("\nd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.使用+ 常用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.14"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +作为一元运算符来将操作数强制转换为数字")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "42"')]),t._v("\nd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.14")]),t._v("\n")])])]),s("h3",{attrs:{id:"显式解析数字字符串-这里要注意的是，解析和转换还是有明显区别-转换不允许出现非数字字符串，看下面例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式解析数字字符串-这里要注意的是，解析和转换还是有明显区别-转换不允许出现非数字字符串，看下面例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 显式解析数字字符串 这里要注意的是，解析和转换还是有明显区别,转换不允许出现非数字字符串，看下面例子")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"42"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"42px"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 42")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 42 ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 42")]),t._v("\n")])])]),s("h3",{attrs:{id:"显式转换为布尔值-非布尔值转换到布尔值的情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式转换为布尔值-非布尔值转换到布尔值的情况","aria-hidden":"true"}},[t._v("#")]),t._v(" 显式转换为布尔值 非布尔值转换到布尔值的情况")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用Boolean(),不过不常用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" d "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" e "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" f "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" g"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" g "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更加常用的方式 !!")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// boolean,里面的!将非布尔值转换到布尔值并取反，加一个!对取反的结果再次取反，得到原本的布尔值")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);
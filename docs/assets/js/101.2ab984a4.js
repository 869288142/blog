(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{172:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),e("h2",{attrs:{id:"事件与结构的关注点分离策略-将事件绑定在模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件与结构的关注点分离策略-将事件绑定在模板","aria-hidden":"true"}},[t._v("#")]),t._v(" 事件与结构的关注点分离策略---将事件绑定在模板")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("扫一眼 HTML 模板便能轻松定位在 JavaScript 代码里对应的方法。")])]),t._v(" "),e("li",[e("p",[t._v("无需手动绑定，框架会自动销毁绑定事件")])])]),t._v(" "),e("h2",{attrs:{id:"谈谈vue的事件委托"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#谈谈vue的事件委托","aria-hidden":"true"}},[t._v("#")]),t._v(" 谈谈Vue的事件委托")]),t._v(" "),e("ol",[e("li",[t._v("事件委托主要解决的是性能问题，及列表项重复绑定一个事件监听器，这点Vue在列表中绑定的时候，使用了同一个回调，极大地减少了性能损耗")]),t._v(" "),e("li",[t._v("多个绑定容易忘记销毁事件，Vue本身接管了事件的绑定和销毁，足够智能，无需我们手动管理。")])])])}],!1,null,null,null);a.default=s.exports}}]);